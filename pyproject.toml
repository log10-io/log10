[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "log10-io"

version = "0.9.1"
authors = ["log10 team"]
license = "MIT"
description = "Unified LLM data management"
readme = "README.md"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
packages = [
    { include = "log10" },
]

[tool.poetry.scripts]
log10 = "log10.__main__:cli"

[tool.poetry.group.dev.dependencies]
build = "^0.10.0"
pytest = "^8.0.0"
requests-mock = "^1.11.0"
respx = "^0.20.2"
ruff = "^0.3.2"
pytest-asyncio = "^0.23.6"

[project.urls]
"Homepage" = "https://github.com/log10-io/log10"
"Bug Tracker" = "https://github.com/log10-io/log10/issues"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
openai = "<2"
anthropic = "<1"
requests = "^2.31.0"
python-dotenv = "^1.0.0"
backoff = "^2.2.1"
pandas = ">=2"
langchain = {version = "<0.2.0", optional = true}
magentic = {version = ">=0.17.0", optional = true, markers = "python_version >= '3.10'"}
litellm = {version = "^1.34.18", optional = true}
lamini = {version = "^2.1.8", optional = true}
google-cloud-aiplatform = {version = ">=1.44.0", optional = true}
mistralai = {version = "^0.1.5", optional = true}
together = {version = "^0.2.7", optional = true}
mosaicml-cli = {version = "^0.5.30", optional = true}
google-cloud-bigquery = {version = "^3.11.4", optional = true}
google-generativeai = {version = "^0.5.2", optional = true}

[tool.poetry.extras]
autofeedback_icl = ["magentic"]
litellm = ["litellm"]
langchain = ["langchain"]
gemini = ["google-cloud-aiplatform"]
mistralai = ["mistralai"]
together = ["together"]
mosaicml = ["mosaicml-cli"]
google-generativeai = ["google-generativeai"]
lamini = ["lamini"]

[tool.ruff]
# Never enforce `E501` (line length violations).
lint.ignore = ["C901", "E501", "E741", "F402", "F823" ]
lint.select = ["C", "E", "F", "I", "W"]
line-length = 119

# Ignore import violations in all `__init__.py` files.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401", "F403", "F811"]
"log10/langchain.py" = ["E402"]
"examples/logging/*.py" = ["E402", "F821"]

[tool.ruff.lint.isort]
lines-after-imports = 2
known-first-party = ["log10"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
